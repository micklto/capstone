---
- name: Install Kubernetes on control nodes
  hosts: control_nodes
  become: true
  vars_files:
    - vars/default.yaml
  tasks:
    - name: Apt update and apt upgrade, install packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: true

    - name: Update to use aptitude
      ansible.builtin.apt:
        name: aptitude
        update_cache: true
        state: latest
        force_apt_get: true
    - name: Install packages that allow apt to be used over HTTPS
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - zip
          - unzip
          - gnupg-agent
          - software-properties-common
    - name: Add an apt signing key for Docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{
          ansible_distribution_release }} stable
        state: present
    - name: Install docker and its dependecies
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status


    - name: Download k3s
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s.sh
        mode: '0755'
      tags:
        - k3s

    - name: Run k3s
      ansible.builtin.shell:
        cmd: cat /tmp/k3s.sh | sh -
      tags:
        - k3s

    - name: Setup kubeconfig for current(ansible?) user
      ansible.builtin.command: "{{ item }}"
      with_items:
        - mkdir -p $HOME/.kube
        - cp -i /etc/rancher/k3s/k3s.yaml $HOME/.kube/config
        - chown root:root $HOME/.kube/config
      tags:
        - k3s

    - name: Generate token
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      register: join_token
      tags:
        - k3s
        - token

    - name: Copy join command to local file
      become: false
      delegate_to: localhost
      ansible.builtin.copy:
        content: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ ansible_default_ipv4.address }}:6443 K3S_TOKEN={{ join_token.stdout_lines[0] }} sh -"
        dest: "./join-command"
        mode: '0755'
      tags:
        - k3s
        - token

    - name: Copy deploy directory
      ansible.builtin.copy:
        src: ../deploy
        dest: deploy
        owner: root
        group: root
        mode: '0750'
      tags:
        - deploy

    - name: Deploy Postgres configuration
      kubernetes.core.k8s:
        state: present
        src: /deploy/postgres-config.yml
      tags:
        - deploy

  handlers:
    - name: docker status
      service: name=docker state=started
